apiVersion: v1
kind: ConfigMap
metadata:
  name: oai-du-config
  namespace: oran-platform
  labels:
    app: oai-du
    component: configuration
data:
  gnb.conf: |
    # Inline configuration from ../config/gnb.conf
    # Generated by Nephio during package specialization
    # See config/gnb.conf for the master template

    # This will be populated via Kptfile mutators with site-specific values
    # Key parameters substituted:
    # - ${SITE_ID}
    # - ${CELL_ID}
    # - ${TRACKING_AREA_CODE}
    # - ${MCC}
    # - ${MNC}
    # - ${USRP_ARGS}
    # - ${F1_CU_ADDRESS}

    # For production deployment, the full config from config/gnb.conf
    # will be rendered here by Nephio's package specialization pipeline

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: oai-cu-cp-config
  namespace: oran-platform
  labels:
    app: oai-cu-cp
    component: configuration
data:
  cu_cp.conf: |
    # OpenAirInterface CU-CP Configuration
    # Control Plane - RRC, NGAP, F1-C, E1

    Active_CU_CPs = ( "CU-CP-OAI" );

    CU_CPs =
    (
      {
        CU_CP_ID = 1;
        CU_CP_name = "CU-CP-OAI";

        # PLMN Configuration
        plmn_list = ({
                       mcc = ${MCC};
                       mnc = ${MNC};
                       mnc_length = 2;
                       snssaiList = ({
                                       sst = ${SST};
                                       sd  = ${SD};
                                     });
                     });

        # F1-C Interface (to DU)
        F1_INTERFACE = {
          local_ip_address  = "0.0.0.0";
          local_port        = 2153;
        };

        # E1 Interface (to CU-UP)
        E1_INTERFACE = {
          local_ip_address  = "0.0.0.0";
          remote_ip_address = "oai-cu-up.oran-platform.svc.cluster.local";
          local_port        = 38462;
          remote_port       = 38462;
        };

        # N2 Interface (to AMF)
        N2_INTERFACE = {
          local_ip_address  = "0.0.0.0";
          remote_ip_address = "oai-amf.core5g.svc.cluster.local";
          local_port        = 38412;
          remote_port       = 38412;
        };

        # Logging
        log_config = {
          global_log_level = "info";
          rrc_log_level = "info";
          ngap_log_level = "info";
          f1ap_log_level = "info";
          e1ap_log_level = "info";
        };
      }
    );

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: oai-cu-up-config
  namespace: oran-platform
  labels:
    app: oai-cu-up
    component: configuration
data:
  cu_up.conf: |
    # OpenAirInterface CU-UP Configuration
    # User Plane - PDCP, SDAP, F1-U, N3

    Active_CU_UPs = ( "CU-UP-OAI" );

    CU_UPs =
    (
      {
        CU_UP_ID = 1;
        CU_UP_name = "CU-UP-OAI";

        # PLMN Configuration
        plmn_list = ({
                       mcc = ${MCC};
                       mnc = ${MNC};
                       mnc_length = 2;
                       snssaiList = ({
                                       sst = ${SST};
                                       sd  = ${SD};
                                     });
                     });

        # E1 Interface (to CU-CP)
        E1_INTERFACE = {
          local_ip_address  = "0.0.0.0";
          remote_ip_address = "oai-cu-cp.oran-platform.svc.cluster.local";
          local_port        = 38462;
          remote_port       = 38462;
        };

        # F1-U Interface (to DU)
        F1U_INTERFACE = {
          local_ip_address  = "0.0.0.0";
          remote_ip_address = "oai-du.oran-platform.svc.cluster.local";
          local_port        = 2152;
          remote_port       = 2152;
        };

        # N3 Interface (to UPF - 5G Core)
        N3_INTERFACE = {
          local_ip_address  = "0.0.0.0";
          remote_ip_address = "oai-upf.core5g.svc.cluster.local";
          local_port        = 2152;
          remote_port       = 2152;
        };

        # PDCP Configuration
        pdcp_config = {
          out_of_order_delivery = "no";
          sn_size = 18;
          discard_timer = 100;  # ms
        };

        # QoS Configuration
        qos_config = {
          # 5QI profiles for different traffic types
          # 5QI 1: Conversational Voice
          # 5QI 2: Conversational Video
          # 5QI 5: IMS Signalling
          # 5QI 9: Best Effort (default)
          default_5qi = 9;
        };

        # Logging
        log_config = {
          global_log_level = "info";
          pdcp_log_level = "info";
          sdap_log_level = "info";
          f1u_log_level = "info";
          gtp_log_level = "info";
        };
      }
    );

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: oai-scripts
  namespace: oran-platform
  labels:
    app: oai-gnb
    component: scripts
data:
  healthcheck.sh: |
    #!/bin/bash
    # Health check script for OAI components

    COMPONENT=$1

    case $COMPONENT in
      du)
        pgrep -f nr-softmodem > /dev/null 2>&1
        ;;
      cu-cp)
        pgrep -f nr-cucp > /dev/null 2>&1
        ;;
      cu-up)
        pgrep -f nr-cuup > /dev/null 2>&1
        ;;
      *)
        echo "Unknown component: $COMPONENT"
        exit 1
        ;;
    esac

    exit $?

  verify-f1-interface.sh: |
    #!/bin/bash
    # Verify F1 interface connectivity

    echo "Checking F1-C interface..."
    nc -z -v oai-cu-cp.oran-platform.svc.cluster.local 2153

    echo "Checking F1-U interface..."
    nc -z -u -v oai-cu-up.oran-platform.svc.cluster.local 2152

    echo "F1 interface check complete"

  collect-metrics.sh: |
    #!/bin/bash
    # Collect OAI metrics for Prometheus

    # This script runs periodically to expose metrics
    # Metrics are collected from OAI's internal statistics

    # Example metrics:
    # - Number of connected UEs
    # - DL/UL throughput
    # - BLER (Block Error Rate)
    # - Resource utilization (PRB usage)

    # Output format: Prometheus text format
    # See: https://prometheus.io/docs/instrumenting/exposition_formats/
